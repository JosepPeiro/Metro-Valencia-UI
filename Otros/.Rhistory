source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/calc_prct.R", encoding = 'UTF-8', echo=TRUE)
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/calc_prct.R", encoding = 'UTF-8', echo=TRUE)
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/calc_prct.R", encoding = 'UTF-8', echo=TRUE)
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/find_station.R", encoding = 'UTF-8', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(jsonlite)
library(stringr)
library(dplyr)
library(rvest)
library(openxlsx)
library(sf)
library(tidyr)
data <- fromJSON("../data/raw_data.txt")
knitr::opts_chunk$set(echo = TRUE)
library(jsonlite)
library(stringr)
library(dplyr)
library(rvest)
library(openxlsx)
library(sf)
library(tidyr)
data <- fromJSON("../data/raw_data.txt")
lineas_estaciones <- list()
for (linea in data$infoEstaciones$lineas){
if (length(linea[["id"]]) == 1){
lineas_estaciones <- append(lineas_estaciones, linea[["id"]])
}
else {
lineas_estaciones <- append(lineas_estaciones, paste0(linea[["id"]], collapse = ","))
}
}
id <- data.frame(data$infoEstaciones$id)
nombre <- data.frame(data$infoEstaciones$nombre)
lineas <- data.frame(t(data.frame(lineas_estaciones)))
lat <- data.frame(data$estaciones$lat)
lng <- data.frame(data$estaciones$lng)
imagen <- data.frame(Columna = rep("imagen", 143))
desc <- data.frame(Columna = rep("desc", 143))
estaciones_df <- data.frame(
id ,
nombre,
lineas,
imagen,
desc,
lat,
lng
)
rownames(estaciones_df) <- NULL
colnames(estaciones_df) <- c("id", "nombre", "lineas","imagen","descripción" ,"lat", "lng")
lc <- data.frame(t(data.frame(data$coloresLineas)))
lineas_colores <- unique(data.frame(t(data.frame(data$coloresLineas))))
colnames(lineas_colores) <- "color"
geometria_linea_1 <- data.frame(data$lineas[[1]]) %>%
select(lng, lat)
g1 <- st_sfc(st_multipoint(as.matrix(geometria_linea_1)))
geometria_linea_2 <- data.frame(data$lineas[[2]]) %>%
select(lng, lat)
g2 <- st_sfc(st_multipoint(as.matrix(geometria_linea_2)))
geometria_linea_3 <- data.frame(data$lineas[[3]]) %>%
select(lng, lat)
g3 <- st_sfc(st_multipoint(as.matrix(geometria_linea_3)))
geometria_linea_4 <- rbind(data.frame(data$lineas[[4]]), data.frame(data$lineas[[5]]), data.frame(data$lineas[[6]]), data.frame(data$lineas[[7]]), data.frame(data$lineas[[8]]), data.frame(data$lineas[[9]]), data.frame(data$lineas[[10]])) %>%
select(lng, lat)
g4 <- st_sfc(st_multipoint(as.matrix(geometria_linea_4)))
geometria_linea_5 <- data.frame(data$lineas[[5]]) %>%
select(lng, lat)
g5 <- st_sfc(st_multipoint(as.matrix(geometria_linea_5)))
geometria_linea_6 <- rbind(data.frame(data$lineas[[12]]), data.frame(data$lineas[[13]]), data.frame(data$lineas[[14]]), data.frame(data$lineas[[15]])) %>%
select(lng, lat)
g6 <- st_sfc(st_multipoint(as.matrix(geometria_linea_6)))
geometria_linea_7 <- data.frame(data$lineas[[16]]) %>%
select(lng, lat)
g7 <- st_sfc(st_multipoint(as.matrix(geometria_linea_7)))
geometria_linea_8 <- data.frame(data$lineas[[17]]) %>%
select(lng, lat)
g8 <- st_sfc(st_multipoint(as.matrix(geometria_linea_8)))
geometria_linea_9 <- data.frame(data$lineas[[18]]) %>%
select(lng, lat)
g9 <- st_sfc(st_multipoint(as.matrix(geometria_linea_9)))
geometria_linea_10 <- data.frame(data$lineas[[19]]) %>%
select(lng, lat)
g10 <- st_sfc(st_multipoint(as.matrix(geometria_linea_10)))
lista_geometrias <- list(g1, g2, g3, g4, g5, g6, g7, g8, g9, g10)
lineas <- data.frame(lista_geometrias)
lineas_t <- lineas %>%
pivot_longer(starts_with("geometry"), names_to = "ID_Geometria", values_to = "geometry") %>%
select(-ID_Geometria)  # Opcional, para quitar la columna de nombres
# for (i in 1:10){
#
#   df_g <- t(lista_geometrias[[i]])
#
#
#   filas_como_cadenas <- apply(df_g, 1, function(x) paste(x, collapse = ","))
#
#   g <- data.frame(t(filas_como_cadenas))
#
#   lineas <- bind_rows(lineas, g)
#
# }
colnames(lineas) <- NULL
l <- data.frame(Valores = 1:10)
colnames(l) <- "Línea"
url <- "https://es.wikipedia.org/wiki/Metrovalencia#Las_l%C3%ADneas"
tabla <- url %>%
read_html() %>%
html_nodes("table") %>%
.[[2]] %>%
html_table(fill = TRUE)
wiki <- data.frame(tabla)
wiki <- wiki[1:10, c(2,3,4,5,6, 7)]
nuevos_nombres <- c(colnames(wiki)[1], "Cabeceras_2", "Tipo",colnames(wiki)[4], "KM", "viajeros(2019)")
colnames(wiki) <- nuevos_nombres
lineas_final <- data.frame(l, lineas_colores, wiki, lineas_t)
row.names(lineas_final) <- NULL
lineas_final$geometry <- st_cast(lineas_final$geometry, "LINESTRING")
# Ahora intenta convertir a objeto sf
lineas_final_sf <- st_as_sf(lineas_final) %>%
mutate(color = paste0("#", color)) %>%
st_set_crs(4326)
path_estaciones <- "../data/estaciones.xlsx"
write.xlsx(estaciones_df, file = path_estaciones, rowNames = FALSE)
path_lineas <- "../data/lineas/lineas.shp"
st_write(lineas_final_sf, path_lineas)
knitr::opts_chunk$set(echo = TRUE)
library(jsonlite)
library(stringr)
library(dplyr)
library(rvest)
library(openxlsx)
library(sf)
library(tidyr)
data <- fromJSON("../data/raw_data.txt")
lineas_estaciones <- list()
for (linea in data$infoEstaciones$lineas){
if (length(linea[["id"]]) == 1){
lineas_estaciones <- append(lineas_estaciones, linea[["id"]])
}
else {
lineas_estaciones <- append(lineas_estaciones, paste0(linea[["id"]], collapse = ","))
}
}
id <- data.frame(data$infoEstaciones$id)
nombre <- data.frame(data$infoEstaciones$nombre)
lineas <- data.frame(t(data.frame(lineas_estaciones)))
lat <- data.frame(data$estaciones$lat)
lng <- data.frame(data$estaciones$lng)
imagen <- data.frame(Columna = rep("imagen", 143))
desc <- data.frame(Columna = rep("desc", 143))
estaciones_df <- data.frame(
id ,
nombre,
lineas,
imagen,
desc,
lat,
lng
)
rownames(estaciones_df) <- NULL
colnames(estaciones_df) <- c("id", "nombre", "lineas","imagen","descripción" ,"lat", "lng")
lc <- data.frame(t(data.frame(data$coloresLineas)))
lineas_colores <- unique(data.frame(t(data.frame(data$coloresLineas))))
colnames(lineas_colores) <- "color"
geometria_linea_1 <- data.frame(data$lineas[[1]]) %>%
select(lng, lat)
g1 <- st_sfc(st_multipoint(as.matrix(geometria_linea_1)))
geometria_linea_2 <- data.frame(data$lineas[[2]]) %>%
select(lng, lat)
g2 <- st_sfc(st_multipoint(as.matrix(geometria_linea_2)))
geometria_linea_3 <- data.frame(data$lineas[[3]]) %>%
select(lng, lat)
g3 <- st_sfc(st_multipoint(as.matrix(geometria_linea_3)))
geometria_linea_4 <- rbind(data.frame(data$lineas[[4]]), data.frame(data$lineas[[5]]), data.frame(data$lineas[[6]]), data.frame(data$lineas[[7]]), data.frame(data$lineas[[8]]), data.frame(data$lineas[[9]]), data.frame(data$lineas[[10]])) %>%
select(lng, lat)
g4 <- st_sfc(st_multipoint(as.matrix(geometria_linea_4)))
geometria_linea_5 <- data.frame(data$lineas[[5]]) %>%
select(lng, lat)
g5 <- st_sfc(st_multipoint(as.matrix(geometria_linea_5)))
geometria_linea_6 <- rbind(data.frame(data$lineas[[12]]), data.frame(data$lineas[[13]]), data.frame(data$lineas[[14]]), data.frame(data$lineas[[15]])) %>%
select(lng, lat)
g6 <- st_sfc(st_multipoint(as.matrix(geometria_linea_6)))
geometria_linea_7 <- data.frame(data$lineas[[16]]) %>%
select(lng, lat)
g7 <- st_sfc(st_multipoint(as.matrix(geometria_linea_7)))
geometria_linea_8 <- data.frame(data$lineas[[17]]) %>%
select(lng, lat)
g8 <- st_sfc(st_multipoint(as.matrix(geometria_linea_8)))
geometria_linea_9 <- data.frame(data$lineas[[18]]) %>%
select(lng, lat)
g9 <- st_sfc(st_multipoint(as.matrix(geometria_linea_9)))
geometria_linea_10 <- data.frame(data$lineas[[19]]) %>%
select(lng, lat)
g10 <- st_sfc(st_multipoint(as.matrix(geometria_linea_10)))
lista_geometrias <- list(g1, g2, g3, g4, g5, g6, g7, g8, g9, g10)
lineas <- data.frame(lista_geometrias)
lineas_t <- lineas %>%
pivot_longer(starts_with("geometry"), names_to = "ID_Geometria", values_to = "geometry") %>%
select(-ID_Geometria)  # Opcional, para quitar la columna de nombres
# for (i in 1:10){
#
#   df_g <- t(lista_geometrias[[i]])
#
#
#   filas_como_cadenas <- apply(df_g, 1, function(x) paste(x, collapse = ","))
#
#   g <- data.frame(t(filas_como_cadenas))
#
#   lineas <- bind_rows(lineas, g)
#
# }
colnames(lineas) <- NULL
l <- data.frame(Valores = 1:10)
colnames(l) <- "Línea"
url <- "https://es.wikipedia.org/wiki/Metrovalencia#Las_l%C3%ADneas"
tabla <- url %>%
read_html() %>%
html_nodes("table") %>%
.[[2]] %>%
html_table(fill = TRUE)
wiki <- data.frame(tabla)
wiki <- wiki[1:10, c(2,3,4,5,6, 7)]
nuevos_nombres <- c(colnames(wiki)[1], "Cabeceras_2", "Tipo",colnames(wiki)[4], "KM", "viajeros(2019)")
colnames(wiki) <- nuevos_nombres
lineas_final <- data.frame(l, lineas_colores, wiki, lineas_t)
row.names(lineas_final) <- NULL
lineas_final$geometry <- st_cast(lineas_final$geometry, "LINESTRING")
# Ahora intenta convertir a objeto sf
lineas_final_sf <- st_as_sf(lineas_final) %>%
mutate(color = paste0("#", color)) %>%
st_set_crs(4326)
path_estaciones <- "../data/estaciones.xlsx"
write.xlsx(estaciones_df, file = path_estaciones, rowNames = FALSE)
path_lineas <- "../data/lineas/lineas.shp"
st_write(lineas_final_sf, path_lineas)
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/prueba.R", echo=TRUE)
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/prueba.R", echo=TRUE)
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/prueba.R", echo=TRUE)
shiny::runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/prueba.R", echo=TRUE)
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/calc_prct.R", encoding = 'UTF-8', echo=TRUE)
estaciones
N_TOTAL_ESTACIONES <- nrow(estaciones)
N_TOTAL_ESTACIONES
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/calc_prct.R", encoding = 'UTF-8', echo=TRUE)
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/calc_prct.R", encoding = 'UTF-8', echo=TRUE)
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/calc_prct.R", encoding = 'UTF-8', echo=TRUE)
id_aciertos
coincide[good_coincide]
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/find_station.R", encoding = 'UTF-8', echo=TRUE)
coincide[good_coincide]
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/find_station.R", encoding = 'UTF-8', echo=TRUE)
find_station("Angel Guimera")
find_station("Angel Guimera")
find_station(Angel Guimera)
find_station("Angel Guimera")
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/find_station.R", encoding = 'UTF-8', echo=TRUE)
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/find_station.R", encoding = 'UTF-8', echo=TRUE)
lineas <- read_sf("../data/lineas/lineas.shp")
estaciones <- read_excel("../data/estaciones.xlsx")
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/prueba.R", echo=TRUE)
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/find_station.R", encoding = 'UTF-8', echo=TRUE)
find_station("Angel Guimera")
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/find_station.R", encoding = 'UTF-8', echo=TRUE)
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/find_station.R", encoding = 'UTF-8', echo=TRUE)
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/find_station.R", encoding = 'UTF-8', echo=TRUE)
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Otros/calc_prct.R", encoding = 'UTF-8', echo=TRUE)
# Imprimimos el resultado
cat("Porcentaje respuestas sobre el total",p_t,"%","\n")
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Esteticos.R", encoding = 'UTF-8', echo=TRUE)
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
?textInput
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
?useShinyjs
useShinyjs
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Esteticos.R", encoding = 'UTF-8', echo=TRUE)
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
source("C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/Esteticos.R", encoding = 'UTF-8', echo=TRUE)
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
runApp('C:/Users/jpeir/Desktop/UNI/DATALAB/Metro-Valencia-UI/MetroValencia')
